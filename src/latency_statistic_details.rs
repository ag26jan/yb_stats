use std::collections::HashMap;
use yb_stats::LatencyStatisticDetails;

pub fn create_hashmap() -> HashMap<String, LatencyStatisticDetails> {
    let mut latency_statistic_details: HashMap<String, LatencyStatisticDetails> = HashMap::new();

    latency_statistic_details.insert(String::from("Create_Tablet_Attempt"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("Create_Tablet_Task"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("Flush_Tablets_Attempt"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("Flush_Tablets_Task"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("Hinted_Leader_Start_Election_Attempt"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("Hinted_Leader_Start_Election_Task"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("admin_triggered_compaction_pool_queue_time_us"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("admin_triggered_compaction_pool_run_time_us"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("dns_resolve_latency_during_init_proxy"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("dns_resolve_latency_during_sys_catalog_setup"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("dns_resolve_latency_during_update_raft_config"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_outbound_call_queue_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_outbound_call_send_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_outbound_call_time_to_response"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_outbound_transfer"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_BootstrapProducer"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_CreateCDCStream"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_DeleteCDCStream"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_GetChanges"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_GetCheckPoint"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_GetLatestEntryOpId"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_ListTablets"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_UpdateCdcReplicatedIndex"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_ChangeConfig"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_GetConsensusState"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_GetLastOpId"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_GetNodeInstance"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_LeaderElectionLost"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_LeaderStepDown"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_RequestConsensusVote"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_RunLeaderElection"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_StartRemoteBootstrap"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_UpdateConsensus"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_CreateSnapshot"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_CreateSnapshotSchedule"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_DeleteSnapshot"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_DeleteSnapshotSchedule"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ImportSnapshotMeta"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ListSnapshotRestorations"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ListSnapshotSchedules"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ListSnapshots"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_RestoreSnapshot"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AddUniverseKeys"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterNamespace"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterRole"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterUniverseReplication"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AreLeaderOnPreferredOnly"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_BackfillIndex"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ChangeEncryptionInfo"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ChangeLoadBalancerState"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ChangeMasterClusterConfig"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateCDCStream"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateNamespace"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateRole"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateTablegroup"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateTransactionStatusTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateUDType"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DdlLog"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteCDCStream"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteNamespace"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteNotServingTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteRole"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteTablegroup"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteUniverseReplication"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DumpState"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_FlushTables"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetBackfillJobs"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetCDCStream"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetColocatedTabletSchema"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetLeaderBlacklistCompletion"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetLoadBalancerState"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetLoadMoveCompletion"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetMasterClusterConfig"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetMasterRegistration"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetNamespaceInfo"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetPermissions"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetTableLocations"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetTableSchema"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetTabletLocations"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetUDType"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetUniveerserReplication"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetUniverseKeyRegistration"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetYsqlCatalogConfig"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetYsqlCatalogConfig"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GrantRevokePermission"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GrantRevokeRole"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_HasUniverseKeyInMemory"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsAlterTableDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsCreateNamespaceDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsCreateTableDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsDeleteNamespaceDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsDeleteTableDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsEncryptionEnabled"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsFlushTablesDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsInitDbDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsLoadBalanced"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsLoadBalancerIdle"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsMasterLeaderServiceReady"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsSetupUniverseReplicationDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsTruncateTableDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_LaunchBackfillIndexForTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListCDCStreams"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListLiveTabletServers"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListMasterRaftPeers"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListMasters"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListNamespaces"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListTablegroups"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListTables"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListTabletServers"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListUDType"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_RedisConfigGet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_RedisConfigSet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_RemoveMasterUpdate"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ReservePgsqlOids"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SetPreferredZones"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SetUniverseReplicationEnabled"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SetupUniverseReplication"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SplitTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_TSHeartbeat"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_TruncateTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_UpdateCDCStream"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_FlushCoverage"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_GetFlag"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_GetStatus"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_Ping"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_RefreshFlags"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_ServerClock"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_SetFlag"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_AlterDatabase"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_AlterTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_BackfillIndex"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateDatabase"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateSequencesDataTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateTablegroup"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_DropDatabase"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_DropTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_DropTablegroup"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_GetCatalogMasterVersion"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_GetDatabaseInfo"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_Heartbeat"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_IsInitDbDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_ListLiveTabletServers"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_OpenTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_ReserveOids"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_TabletServerCount"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_TruncateTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_BeginRemoteBootstrapSession"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_CheckSessionActive"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_EndRemoteBootstrapSession"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_FetchData"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_RemoveSession"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_AddTableToTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_AlterSchema"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_BackfillDone"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_BackfillIndex"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_CopartitionTable"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_CountIntents"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_CreateTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_DeleteTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_FlushTablets"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_GetSafeTime"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_RemoveTableFromTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_SplitTablet"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_TabletSnapshotOp"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_UpgradeYsql"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerForwardService_Read"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerForwardService_Write"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_AbortTransaction"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Checksum"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetLogLocation"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetMasterAddresses"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetSharedData"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetSplitKey"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetTabletStatus"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetTransactionStatus"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetTransactionStatusAtParticipant"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_ImportData"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_IsTabletServerReady"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_ListTablets"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_ListTabletsForTabletServer"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_NoOp"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Publish"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Read"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_TakeTransaction"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Truncate"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_UpdateTransaction"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_VerifyTableRowRange"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Write"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_append_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_bytes_logged"), LatencyStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("bytes"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_entry_batches_per_group"), LatencyStatisticDetails { unit: String::from("requests"), unit_suffix: String::from("req"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_gc_duration"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_group_commit_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_reader_read_batch_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_roll_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_sync_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("log_wal_size"), LatencyStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("bytes"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("op_apply_queue_length"), LatencyStatisticDetails { unit: String::from("tasks"), unit_suffix: String::from("tasks"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("op_apply_queue_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("op_apply_run_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("op_read_queue_length"), LatencyStatisticDetails { unit: String::from("tasks"), unit_suffix: String::from("tasks"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("op_read_queue_run_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("op_read_queue_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("post_split_trigger_compaction_pool_queue_time_us"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("post_split_trigger_compaction_pool_run_time_us"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ql_read_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("redis_read_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_bytes_per_multiget"), LatencyStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("byte"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_bytes_per_read"), LatencyStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("byte"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_bytes_per_write"), LatencyStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("byte"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_compaction_times_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_db_get_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_db_multiget_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_db_seek_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_db_write_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_numfiles_in_singlecompaction"), LatencyStatisticDetails { unit: String::from("files"), unit_suffix: String::from("files"), divisor: 1, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_read_block_compaction_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_read_block_get_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_sst_read_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_wal_file_sync_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rocksdb_write_raw_block_micros"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("rpc_incoming_queue_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("snapshot_read_inflight_wait_duration"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("transaction_pool_cache"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ts_bootstrap_time"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("write_lock_latency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("write_op_duration_client_propagated_consistency"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_auth_resource_role_permission_index"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_auth_role_permissions"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_auth_roles"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_local"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_partitions"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_peers"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_aggregates"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_columns"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_functions"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_indexes"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_keyspaces"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_tables"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_triggers"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_types"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_schema_views"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    latency_statistic_details.insert(String::from("ycsql_queries_system_size_estimates"), LatencyStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });

    return latency_statistic_details;
}