use std::collections::HashMap;

#[derive(Debug)]
pub struct CountSumStatisticDetails {
    pub unit: String,
    pub unit_suffix: String,
    pub divisor: i64,
    pub stat_type: String,
}

#[allow(dead_code)]
pub fn countsum_create_hashmap() -> HashMap<String, CountSumStatisticDetails> {
    let mut countsum_statistic_details: HashMap<String, CountSumStatisticDetails> = HashMap::new();

    countsum_statistic_details.insert(String::from("Create_Tablet_Attempt"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("Create_Tablet_Task"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("Flush_Tablets_Attempt"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("Flush_Tablets_Task"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("Hinted_Leader_Start_Election_Attempt"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("Hinted_Leader_Start_Election_Task"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("admin_triggered_compaction_pool_queue_time_us"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("admin_triggered_compaction_pool_run_time_us"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("dns_resolve_latency_during_init_proxy"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("dns_resolve_latency_during_sys_catalog_setup"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("dns_resolve_latency_during_update_raft_config"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_outbound_call_queue_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_outbound_call_send_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_outbound_call_time_to_response"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_outbound_transfer"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_BootstrapProducer"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_CreateCDCStream"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_DeleteCDCStream"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_GetChanges"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_GetCheckPoint"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_GetLatestEntryOpId"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_ListTablets"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_cdc_CDCService_UpdateCdcReplicatedIndex"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_client_read_local"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_client_read_remote"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_client_time_to_send"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_client_write_local"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_client_write_remote"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_ChangeConfig"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_GetConsensusState"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_GetLastOpId"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_GetNodeInstance"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_LeaderElectionLost"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_LeaderStepDown"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_RequestConsensusVote"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_RunLeaderElection"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_StartRemoteBootstrap"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_consensus_ConsensusService_UpdateConsensus"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_CreateSnapshot"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_CreateSnapshotSchedule"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_DeleteSnapshot"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_DeleteSnapshotSchedule"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ImportSnapshotMeta"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ListSnapshotRestorations"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ListSnapshotSchedules"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_ListSnapshots"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterBackupService_RestoreSnapshot"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AddUniverseKeys"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterNamespace"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterRole"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AlterUniverseReplication"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_AreLeaderOnPreferredOnly"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_BackfillIndex"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ChangeEncryptionInfo"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ChangeLoadBalancerState"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ChangeMasterClusterConfig"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateCDCStream"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateNamespace"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateRole"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateTablegroup"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateTransactionStatusTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_CreateUDType"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DdlLog"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteCDCStream"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteNamespace"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteNotServingTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteRole"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteTablegroup"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DeleteUniverseReplication"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_DumpState"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_FlushTables"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetBackfillJobs"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetCDCStream"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetColocatedTabletSchema"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetLeaderBlacklistCompletion"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetLoadBalancerState"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetLoadMoveCompletion"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetMasterClusterConfig"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetMasterRegistration"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetNamespaceInfo"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetPermissions"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetTableLocations"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetTableSchema"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetTabletLocations"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetUDType"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetUniveerserReplication"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetUniverseKeyRegistration"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetYsqlCatalogConfig"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GetYsqlCatalogConfig"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GrantRevokePermission"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_GrantRevokeRole"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_HasUniverseKeyInMemory"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsAlterTableDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsCreateNamespaceDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsCreateTableDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsDeleteNamespaceDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsDeleteTableDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsEncryptionEnabled"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsFlushTablesDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsInitDbDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsLoadBalanced"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsLoadBalancerIdle"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsMasterLeaderServiceReady"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsSetupUniverseReplicationDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_IsTruncateTableDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_LaunchBackfillIndexForTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListCDCStreams"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListLiveTabletServers"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListMasterRaftPeers"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListMasters"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListNamespaces"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListTablegroups"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListTables"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListTabletServers"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ListUDType"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_RedisConfigGet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_RedisConfigSet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_RemoveMasterUpdate"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_ReservePgsqlOids"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SetPreferredZones"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SetUniverseReplicationEnabled"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SetupUniverseReplication"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_SplitTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_TSHeartbeat"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_TruncateTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_master_MasterService_UpdateCDCStream"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_FlushCoverage"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_GetFlag"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_GetStatus"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_Ping"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_RefreshFlags"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_ServerClock"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_server_GenericService_SetFlag"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_AlterDatabase"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_AlterTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_BackfillIndex"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateDatabase"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateSequencesDataTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_CreateTablegroup"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_DropDatabase"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_DropTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_DropTablegroup"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_GetCatalogMasterVersion"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_GetDatabaseInfo"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_Heartbeat"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_IsInitDbDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_ListLiveTabletServers"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_OpenTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_ReserveOids"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_TabletServerCount"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_PgClientService_TruncateTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_BeginRemoteBootstrapSession"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_CheckSessionActive"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_EndRemoteBootstrapSession"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_FetchData"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_RemoteBootstrapService_RemoveSession"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_AddTableToTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_AlterSchema"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_BackfillDone"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_BackfillIndex"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_CopartitionTable"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_CountIntents"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_CreateTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_DeleteTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_FlushTablets"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_GetSafeTime"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_RemoveTableFromTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_SplitTablet"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_TabletSnapshotOp"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerAdminService_UpgradeYsql"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerForwardService_Read"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerForwardService_Write"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_AbortTransaction"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Checksum"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetLogLocation"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetMasterAddresses"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetSharedData"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetSplitKey"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetTabletStatus"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetTransactionStatus"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_GetTransactionStatusAtParticipant"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_ImportData"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_IsTabletServerReady"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_ListTablets"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_ListTabletsForTabletServer"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_NoOp"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Publish"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Read"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_TakeTransaction"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Truncate"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_UpdateTransaction"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_VerifyTableRowRange"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("handler_latency_yb_tserver_TabletServerService_Write"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_append_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_bytes_logged"), CountSumStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("bytes"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_entry_batches_per_group"), CountSumStatisticDetails { unit: String::from("requests"), unit_suffix: String::from("req"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_gc_duration"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_group_commit_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_reader_read_batch_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_roll_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_sync_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("log_wal_size"), CountSumStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("bytes"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("op_apply_queue_length"), CountSumStatisticDetails { unit: String::from("tasks"), unit_suffix: String::from("tasks"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("op_apply_queue_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("op_apply_run_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("op_read_queue_length"), CountSumStatisticDetails { unit: String::from("tasks"), unit_suffix: String::from("tasks"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("op_read_queue_run_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("op_read_queue_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("post_split_trigger_compaction_pool_queue_time_us"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("post_split_trigger_compaction_pool_run_time_us"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ql_read_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("redis_read_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_bytes_per_multiget"), CountSumStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("byte"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_bytes_per_read"), CountSumStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("byte"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_bytes_per_write"), CountSumStatisticDetails { unit: String::from("byte"), unit_suffix: String::from("byte"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_compaction_times_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_db_get_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_db_multiget_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_db_seek_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_db_write_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_numfiles_in_singlecompaction"), CountSumStatisticDetails { unit: String::from("files"), unit_suffix: String::from("files"), divisor: 1, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_read_block_compaction_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_read_block_get_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_sst_read_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_wal_file_sync_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rocksdb_write_raw_block_micros"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("rpc_incoming_queue_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("snapshot_read_inflight_wait_duration"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("transaction_pool_cache"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ts_bootstrap_time"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("write_lock_latency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("write_op_duration_client_propagated_consistency"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_auth_resource_role_permission_index"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_auth_role_permissions"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_auth_roles"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_local"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_partitions"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_peers"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_aggregates"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_columns"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_functions"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_indexes"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_keyspaces"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_tables"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_triggers"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_types"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_schema_views"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });
    countsum_statistic_details.insert(String::from("ycsql_queries_system_size_estimates"), CountSumStatisticDetails { unit: String::from("microseconds"), unit_suffix: String::from("us"), divisor: 1000000, stat_type: String::from("counter") });

    return countsum_statistic_details;
}
